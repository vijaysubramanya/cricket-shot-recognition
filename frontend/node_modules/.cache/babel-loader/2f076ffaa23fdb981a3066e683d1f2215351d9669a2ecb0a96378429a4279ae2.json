{"ast":null,"code":"var _jsxFileName = \"/home/vijay/CricketShotEstimation/frontend/src/components/ResultsDisplay.js\";\nimport React from 'react';\nimport './ResultsDisplay.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResultsDisplay = ({\n  results\n}) => {\n  if (!results) return null;\n  const {\n    shot_type,\n    confidence,\n    all_probabilities,\n    pose_detected\n  } = results;\n\n  // Get shot emoji based on shot type\n  const getShotEmoji = shotType => {\n    const emojiMap = {\n      'drive': '🏏',\n      'legglance-flick': '🔄',\n      'pull': '⚡',\n      'sweep': '🔄'\n    };\n    return emojiMap[shotType] || '🏏';\n  };\n\n  // Get confidence color\n  const getConfidenceColor = conf => {\n    if (conf >= 0.8) return '#28a745';\n    if (conf >= 0.6) return '#ffc107';\n    return '#dc3545';\n  };\n\n  // Sort probabilities for display\n  const sortedProbabilities = Object.entries(all_probabilities).sort(([, a], [, b]) => b - a);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"results-display\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Classification Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-result\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"shot-type\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"shot-emoji\",\n          children: getShotEmoji(shot_type)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: shot_type.replace('-', ' ').toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"confidence-meter\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confidence-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"confidence-fill\",\n            style: {\n              width: `${confidence * 100}%`,\n              backgroundColor: getConfidenceColor(confidence)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"confidence-text\",\n          children: [Math.round(confidence * 100), \"% confidence\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"probabilities\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"All Shot Probabilities\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"probability-list\",\n        children: sortedProbabilities.map(([shotType, prob]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `probability-item ${shotType === shot_type ? 'selected' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"shot-name\",\n            children: shotType.replace('-', ' ').toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"probability-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"probability-fill\",\n              style: {\n                width: `${prob * 100}%`,\n                backgroundColor: shotType === shot_type ? getConfidenceColor(prob) : '#e9ecef'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"probability-text\",\n            children: [Math.round(prob * 100), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, shotType, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analysis-tips\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Analysis Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u2705 ResNet50 model analyzed full image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u2705 Deep learning features extracted automatically\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u2705 Robust to lighting and pose variations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), pose_detected ? /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u2705 Pose keypoints detected for visualization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u2139\\uFE0F No pose detected (classification still works)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), confidence < 0.6 && /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u26A0\\uFE0F Low confidence - consider trying a different image angle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), confidence >= 0.9 && /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\uD83C\\uDFAF High confidence prediction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_c = ResultsDisplay;\nexport default ResultsDisplay;\nvar _c;\n$RefreshReg$(_c, \"ResultsDisplay\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ResultsDisplay","results","shot_type","confidence","all_probabilities","pose_detected","getShotEmoji","shotType","emojiMap","getConfidenceColor","conf","sortedProbabilities","Object","entries","sort","a","b","className","children","fileName","_jsxFileName","lineNumber","columnNumber","replace","toUpperCase","style","width","backgroundColor","Math","round","map","prob","_c","$RefreshReg$"],"sources":["/home/vijay/CricketShotEstimation/frontend/src/components/ResultsDisplay.js"],"sourcesContent":["import React from 'react';\nimport './ResultsDisplay.css';\n\nconst ResultsDisplay = ({ results }) => {\n  if (!results) return null;\n\n  const { shot_type, confidence, all_probabilities, pose_detected } = results;\n\n  // Get shot emoji based on shot type\n  const getShotEmoji = (shotType) => {\n    const emojiMap = {\n      'drive': '🏏',\n      'legglance-flick': '🔄',\n      'pull': '⚡',\n      'sweep': '🔄'\n    };\n    return emojiMap[shotType] || '🏏';\n  };\n\n  // Get confidence color\n  const getConfidenceColor = (conf) => {\n    if (conf >= 0.8) return '#28a745';\n    if (conf >= 0.6) return '#ffc107';\n    return '#dc3545';\n  };\n\n  // Sort probabilities for display\n  const sortedProbabilities = Object.entries(all_probabilities)\n    .sort(([,a], [,b]) => b - a);\n\n  return (\n    <div className=\"results-display\">\n      <h2>Classification Results</h2>\n      \n      <div className=\"main-result\">\n        <div className=\"shot-type\">\n          <span className=\"shot-emoji\">{getShotEmoji(shot_type)}</span>\n          <h3>{shot_type.replace('-', ' ').toUpperCase()}</h3>\n        </div>\n        \n        <div className=\"confidence-meter\">\n          <div className=\"confidence-bar\">\n            <div \n              className=\"confidence-fill\"\n              style={{ \n                width: `${confidence * 100}%`,\n                backgroundColor: getConfidenceColor(confidence)\n              }}\n            ></div>\n          </div>\n          <span className=\"confidence-text\">\n            {Math.round(confidence * 100)}% confidence\n          </span>\n        </div>\n      </div>\n\n      <div className=\"probabilities\">\n        <h4>All Shot Probabilities</h4>\n        <div className=\"probability-list\">\n          {sortedProbabilities.map(([shotType, prob]) => (\n            <div \n              key={shotType} \n              className={`probability-item ${shotType === shot_type ? 'selected' : ''}`}\n            >\n              <span className=\"shot-name\">\n                {shotType.replace('-', ' ').toUpperCase()}\n              </span>\n              <div className=\"probability-bar\">\n                <div \n                  className=\"probability-fill\"\n                  style={{ \n                    width: `${prob * 100}%`,\n                    backgroundColor: shotType === shot_type ? getConfidenceColor(prob) : '#e9ecef'\n                  }}\n                ></div>\n              </div>\n              <span className=\"probability-text\">\n                {Math.round(prob * 100)}%\n              </span>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"analysis-tips\">\n        <h4>Analysis Details</h4>\n        <ul>\n          <li>✅ ResNet50 model analyzed full image</li>\n          <li>✅ Deep learning features extracted automatically</li>\n          <li>✅ Robust to lighting and pose variations</li>\n          {pose_detected ? (\n            <li>✅ Pose keypoints detected for visualization</li>\n          ) : (\n            <li>ℹ️ No pose detected (classification still works)</li>\n          )}\n          {confidence < 0.6 && (\n            <li>⚠️ Low confidence - consider trying a different image angle</li>\n          )}\n          {confidence >= 0.9 && (\n            <li>🎯 High confidence prediction</li>\n          )}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default ResultsDisplay; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}